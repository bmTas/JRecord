package ${generateOptions.packageId}.io;
#incl("schema/CommentSchema.pvm")
import java.io.IOException;

import poDownload.pojo.data.LineAmsPoDownloadDetailJR;
import poDownload.pojo.def.IAmsPoDownloadDetail;
import poDownload.pojo.schema.SchemaAmsPoDownload;
import net.sf.JRecord.ByteIO.AbstractByteWriter;
import net.sf.JRecord.Common.IGetData;

#*  *##foreach( $r in ${generateOptions.schemaDefinition.getRecords()}) 
import ${generateOptions.packageId}.data.Line${r.extensionName}JR;
##import ${generateOptions.packageId}.data.Line${r.extensionName}Pojo;
import ${generateOptions.packageId}.definitions.I${r.extensionName};
#*  *##end 


public class Writer${generateOptions.schemaDefinition.extensionName} {

    private final AbstractByteWriter writer;
    private final Schema${generateOptions.schemaDefinition.extensionName} schema${generateOptions.schemaDefinition.extensionName};
    
#*  *##foreach( $r in ${generateOptions.schemaDefinition.getRecords()}) 
    private final Line${r.extensionName}JR line${r.extensionName}JR;
#*  *##end 
    
    
    WriterAmsPoDownload(
               AbstractByteWriter writer,
               Schema${generateOptions.schemaDefinition.extensionName} schema${generateOptions.schemaDefinition.extensionName}) {
        super();
        this.writer = writer;
        this.schema${generateOptions.schemaDefinition.extensionName} = schema${generateOptions.schemaDefinition.extensionName};
        
#*  *##foreach( $r in ${generateOptions.schemaDefinition.getRecords()}) 
        line${r.extensionName}JR = new Line${r.extensionName}JR(schema${generateOptions.schemaDefinition.extensionName}.record${r.extensionName});
#*  *##end 
    }



    public void write(IGetData datasource) throws IOException {
        writer.write(datasource.getData());
    }
    
#*  *##foreach( $r in ${generateOptions.schemaDefinition.getRecords()}) 
    public void write(I${r.extensionName} dtl) throws IOException {
        IGetData v;
        if (dtl instanceof IGetData) {
            v = (IGetData) dtl;
        } else {
            line${r.extensionName}JR.set(dtl);
            v = line${r.extensionName}JR;
        }
        
        writer.write(v.getData());
    }
#*  *##end 
	
    public void close() throws IOException {
        writer.close();
   }
}
