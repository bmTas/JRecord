package ${generateOptions.packageId}.schema;
#incl("schema/CommentSchema.pvm")
#macro(arrayDef)
#*  *##foreach($a in ${currentRecord.getArrayDetailsList()}) 
        array${a.getFirstElement().extensionName} = new ArrayFieldDefinition(
#*      *##set ( $sep = '  ')
                 ${sep}record,
                 ${sep}${a.getSizes().get(0)},
#*      *##foreach($af in ${a.getFieldDefs()}) 
                 ${sep}fld${af.extensionName}
#*          *##set ( $sep = ', ')
#*      *##end
        );
#*  *##end
#end	
#*  *##if (${currentRecord.getArrayDetailsList().size()} > 0)
import net.sf.JRecord.cgen.impl.ArrayFieldDefinition;
import net.sf.JRecord.cgen.impl.ArrayFieldDefinition1;
import net.sf.JRecord.cgen.def.*;
#*  *##end
import net.sf.JRecord.Common.Constants;
import net.sf.JRecord.Common.FieldDetail;
import net.sf.JRecord.Common.IFieldDetail;
import net.sf.JRecord.Details.LayoutDetail;
import net.sf.JRecord.Details.RecordDetail;
#*  *##if (${currentRecord.getRecordSelectionStr().trim().length()} > 0)
import net.sf.JRecord.Details.LayoutGetFieldByName;
import net.sf.JRecord.ExternalRecordSelection.ExternalFieldSelection;
#*  *##end
import net.sf.JRecord.Types.Type;
#*  *##if (${currentRecord.getRecordPositionOptionStr()} != 'null') 
import net.sf.JRecord.Option.Options;
#*  *##end

public class Record${currentRecord.extensionName} {

    public static final String RECORD_NAME = "${currentRecord.record.getRecordName()}";
    
#*  *##foreach($f in ${currentRecord.getFields()}) 
#*      *##if (${f.alwaysIncludeField()})	
    public final IFieldDetail fld${f.extensionName};
#*      *##end
#*  *##end

#*  *##foreach($a in ${currentRecord.getArrayDetailsList()}) 
    public final IArray${a.getDimensionString()}Dimension array${a.getFirstElement().extensionName};
#*  *##end

    public final RecordDetail record;
    
    private final String font;
    
    public Record${currentRecord.extensionName}() {
       FieldDetail[] flds = new FieldDetail[${currentRecord.getFields().size()}];
       int i = 0;
       
       font = "${generateOptions.font}";
#*  *##foreach($f in ${currentRecord.getFields()}) 
#*      *##if (${f.alwaysIncludeField()})	
       fld${f.extensionName} = createField(flds, i++, "${f.fieldDetail.getLookupName()}", ${f.getJRecordTypeId()}, ${f.fieldDetail.getPos()}, ${f.fieldDetail.getLen()}, ${f.fieldDetail.getDecimal()});
#*      *##end
#*  *##end

      String t = "${currentRecord.record.getDelimiter()}"; 	
      if (t == "\t") {
          t = "<tab>";
      }
      record = new RecordDetail(RECORD_NAME,
                   ${currentRecord.getRecordPositionOptionStr()},
                   ${currentRecord.getJRecordRecordType()}, t, "${currentRecord.record.getQuoteDefinition().jrDefinition()}",
                   font, flds, ${currentRecord.record.getRecordStyle()});
      record.setParentRecordIndex( ${currentRecord.record.getParentRecordIndex()});
         
#*  *##set( $dependingOn = ${currentRecord.getDependingOn()})
#*  *##if ( ${dependingOn} ) 
#*      *##if ( ${dependingOn.size()} > 0) 
      List<DependingOn> dep = Arrays.asList(
#*           *##foreach($d in ${dep}) 
          new DependingOn("${d.getVariableName()}", ${d.getPosition()}, ${d.getOccursLength()}, ${d.getOccursMax()}));
#*           *##end
      );
    
      ret.setDependingOn(new ArrayList(dep));
#*      *##end
#*  *##end

#arrayDef
    }
    
    public Record${currentRecord.extensionName}(LayoutDetail l, RecordDetail r) {
    
        font = l.getFontName();
        record = r;
        
#*  *##foreach($f in ${currentRecord.getFields()}) 
#*      *##if (${f.alwaysIncludeField()})	
        fld${f.extensionName} = l.getFieldFromName("${f.fieldDetail.getLookupName()}");        
#*      *##end
#*  *##end

#*#arrayDef
#*  *##foreach($a in ${currentRecord.getArrayDetailsList()}) 
        array${a.getFirstElement().extensionName} = new ArrayFieldDefinition1(
#*      *##set ( $sep = '')
                   new int[] {#*
           *##foreach($count in ${a.getSizes()})#*
               *##set ($c = ${count} + 1)#*
           	   *#${sep}${c}#*
               *##set ($sep = ', ')#*
           *##end#*      *#},
#*         *##set ( $sz =  ${a.getFieldDefs().size()} - 1)          	   
                   record.getArrayFields(
                       (FieldDetail)fld${a.getFieldDefs().get($sz).extensionName},
                       "${a.getFirstElement().cobolName}")      
        );
#*  *##end

    }
    
    public void updateRecordSelection(LayoutDetail l) {
#*  *##if (${currentRecord.getRecordSelectionStr().trim().length()} > 0)
       record.updateRecordSelection(
             ${currentRecord.getRecordSelectionStr()},
                 new LayoutGetFieldByName(l, record));
#*  *##end                 
    }
    
    private FieldDetail createField(
                FieldDetail[] flds, int idx,
                String name,
                int type,
                int pos,
                int len,
                int decimal) {
        flds[idx] = FieldDetail.newFixedWidthField(name, type, pos, len, decimal, font);
        return flds[idx];
    }
}
