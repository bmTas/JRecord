#macro (printFieldsFieldNameClass)
#*  *##set( $sep = "        ")    
#*  *##foreach($f in ${r.getFields(11)})
#*      *##if (! ${f.isArrayItem()})
                      ${sep}line.getFieldValue(r${r.extensionName}.${f.javaName}).asString()
#*            *##set( $sep = '+ " " + ')    
#*      *##end
#*  *##end
#*  *##foreach($a in ${r.getArrayDetailsList()}) 
#*      *##if (! ${f.isArrayItem()})	
                      ${sep}line.getFieldValue(r${r.extensionName}.${a.getFirstElement().javaName}.get(${a.getZeroArrayIndex()})).asString()
#*            *##set( $sep = '+ " " + ')    
#*      *##end
#*  *##end
#end
#macro (printFieldsJavaPojo)
#*  *##set( $sep = "        ")    
#*  *##foreach($f in ${r.getFields(11)})
#*      *##if (! ${f.isArrayItem()})
                      ${sep}line.get${f.extensionName}()
#*            *##set( $sep = '+ " " + ')    
#*      *##end
#*  *##end
#*  *##foreach($a in ${r.getArrayDetailsList()}) 
##*      *##if (! ${f.isArrayItem()})	
                      ${sep}line.get${a.getFirstElement().extensionName}(${a.getZeroArrayIndex()})
#*            *##set( $sep = '+ " " + ')    
##*      *##end
#*  *##end
#end
#macro (printFieldsWrapper)
#*  *##set( $sep = "        ")    
#*  *##foreach($f in ${r.getFields(11)})
#*      *##if (! ${f.isArrayItem()})     
                      ${sep}line${r.extensionName}JR.get${f.extensionName}() 
#*            *##set( $sep = '+ " " + ')    
#*      *##end
#*  *##end
#*  *##foreach($a in ${r.getArrayDetailsList()}) 
#*      *##if (! ${f.isArrayItem()})
                      ${sep}line${r.extensionName}JR.get${a.getFirstElement().extensionName}(${a.getZeroArrayIndex()})
#*            *##set( $sep = '+ " " + ')    
#*      *##end
#*  *##end
#end	
##
## Macro to Convert from the Java representation to Record Format
##
#macro (convertFromJava $fieldDef $source)#*
	*#${fieldDef.formatGet($source)}#* 
*##end##
##
## Macro Convert from Record to the java representation
##
#macro (convertToJava $fieldDef $source)#*
  	*##set($xx = "${source}.${fieldDef.getAsType()}()")#*
    *#${fieldDef.formatSet($xx)}#*
*##end##
##
## Macro for conversion imports
##
#macro (conversionImport $currentRecord)	
#* *##foreach($jc in ${currentRecord.getConversionImports()})
import ${jc};
#* *##end
#end
##
## Macro to generate conversion code
##
#macro (conversionCode $currentRecord)	
#* *##foreach($jc in ${currentRecord.getJavaCode()})
$jc
#* *##end
#end