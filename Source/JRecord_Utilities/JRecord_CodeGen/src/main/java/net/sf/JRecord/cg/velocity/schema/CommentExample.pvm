 /*
  *   Example program for ${generateOptions.getSchemaDefinition().schemaShortName}
  *   This class uses the JRecord project (https://sourceforge.net/projects/jrecord/)
  * -------------------------------------------------------------------
  *        
  * *------------- Keep this notice in your final code ---------------
  * *   This code was generated by JRecord projects CodeGen program
  * *            on the: ${generateOptions.getTemplateDtls().currentDateTime} 
  * *     from Copybook: ${generateOptions.getSchemaDefinition().schemaShortName}
  * *          Template: ${generateOptions.getTemplateDtls().template}
  * *             Split: ${generateOptions.getSplitOption().option}   
  * * File Organization: ${generateOptions.getFileStructureCode().option}   
  * *              Font: ${generateOptions.font}
  * *   
  * *    CodeGen Author: Bruce Martin
  * *-----------------------------------------------------------------
  *
  *   This class should be used as an example of reading/writing files
  *   using JRecord. You will need to modify the code to meet your
  *   needs. The Author of CodeGen (Bruce Martin) program takes no 
  *   responsibility for the accuracy of the generated code. 
  *
  *   Good Luck
  *              Bruce Martin
  *
  * ------------------------------------------------------------------
  * v01  CodeGen        ${generateOptions.getTemplateDtls().currentDate}  Initial version
  *     (Bruce Martin)
  *
  * ------------------------------------------------------------------ 
  */
#macro(IoBldrImport)
#*  *##if (${generateOptions.getSchemaDefinition().isXmlSchema()})
#*      *##set ($ioBldr = "IIOBuilder")
#*  *##else
#*      *##set ($ioBldr = "ICobolIOBuilder")
import net.sf.JRecord.Common.Constants;
import net.sf.JRecord.External.CopybookLoader;
#*  *##end
import net.sf.JRecord.def.IO.builders.${ioBldr};
#*  *##if (${generateOptions.dialect.utlCode} != "FMT_MAINFRAME")
import net.sf.JRecord.Numeric.ICopybookDialects;
#*  *##end
#end
#macro (genSelect $recSel $sp)
#* *##if (${recSel.getType()} == ${const.TYPE_ATOM})
                  $sp "${recSel.getValue()}".equals(line.getFieldValue(r${r.extensionName}.${recSel.field.javaName}).asString())
#* *##else
                  $sp (
#*      *##set($sep = "   ")
#*      *##foreach ( $rs in  ${recSel.getItems()})
#genSelect($rs, $sep)
#*          *##set($sep = " ${recSel.getBooleanOperator()}")
#*      *##end
                   )
#* *##end
#end

