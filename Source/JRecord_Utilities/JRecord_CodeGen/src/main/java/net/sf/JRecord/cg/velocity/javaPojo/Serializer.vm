package  ${generateOptions.packageId}.io;
#incl("schema/CommentSchema.pvm")

import net.sf.JRecord.cgen.def.ISerializer;

import ${generateOptions.packageId}.schema.Schema${generateOptions.schemaDefinition.extensionName};
#*  *##foreach( $r in ${generateOptions.schemaDefinition.getRecords()}) 
import ${generateOptions.packageId}.data.Line${r.extensionName}JR;
import ${generateOptions.packageId}.definitions.I${r.extensionName};
#*  *##end

public class Serializer${generateOptions.schemaDefinition.extensionName} 
#*  *##set( $pref = 'implements ')
#*  *##foreach( $r in ${generateOptions.schemaDefinition.getRecords()}) 
${pref} ISerializer<I${r.extensionName}>
#*  *##set( $pref = '         , ')
#*  *##end
{

#*  *##foreach( $r in ${generateOptions.schemaDefinition.getRecords()}) 
    private Line${r.extensionName}JR line${r.extensionName};
#*  *##end

    public Serializer${generateOptions.schemaDefinition.extensionName}(Schema${generateOptions.schemaDefinition.extensionName} schemaDef) {
#*  *##foreach( $r in ${generateOptions.schemaDefinition.getRecords()}) 
        line${r.extensionName} = new Line${r.extensionName}JR(schemaDef.record${r.extensionName});
#*  *##end
    }
#*  *##foreach( $r in ${generateOptions.schemaDefinition.getRecords()}) 
    
    @Override
    public byte[] serialize(I${r.extensionName} rec) {
        Line${r.extensionName}JR tl = line${r.extensionName};
        if (rec instanceof Line${r.extensionName}JR) {
            tl = (Line${r.extensionName}JR) rec;
        } else {
            tl.set(rec);
        }
        return tl.getData();
    }
#*  *##end
}

