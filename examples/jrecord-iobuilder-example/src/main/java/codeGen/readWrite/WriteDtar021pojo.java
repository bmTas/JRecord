package codeGen.readWrite;
 /*
  *   Example program for DTAR021.cbl
  *   This class uses the JRecord project (https://sourceforge.net/projects/jrecord/)
  * -------------------------------------------------------------------
  *        
  * *------------- Keep this notice in your final code ---------------
  * *   This code was generated by JRecord projects CodeGen program
  * *            on the: 26 Nov 2017 8:20:4 
  * *     from Copybook: DTAR021.cbl
  * *          Template: pojo
  * *             Split: None   
  * * File Organization: FixedWidth   
  * *              Font: cp037
  * *   
  * *    CodeGen Author: Bruce Martin
  * *-----------------------------------------------------------------
  *
  *   This class should be used as an example of reading/writing files
  *   using JRecord. You will need to modify the code to meet your
  *   needs. The Author of CodeGen (Bruce Martin) program takes no 
  *   responsibility for the accuracy of the generated code. 
  *
  *   Good Luck
  *              Bruce Martin
  *
  * ------------------------------------------------------------------
  * v01  CodeGen        26 Nov 2017  Initial version
  *     (Bruce Martin)
  *
  * ------------------------------------------------------------------ 
  */


import java.io.IOException;
import java.math.BigDecimal;

import codeGen.readWrite.data.LineDtar021Pojo;
import codeGen.readWrite.io.IoBuilderDtar021;
import net.sf.JRecord.cgen.def.IWriter;
import net.sf.JRecord.cgen.impl.io.IoBuilder;


/**
 * Write Cobol file using a Cobol Copybook (Dtar021).
 *
 * This Generated program is intended as an example of using JRecord
 * rather than a useful program (that compiles - it wont).
 * You should regard it as a starting point and modify
 * it according to needs
 */
public final class WriteDtar021pojo {


    /**
     * Example of LineReader  classes
     */
    public WriteDtar021pojo() {
        super();
        String outputFileName = getFilePath("DTAR022.bin");
        String copybookName   = getFilePath("DTAR021.cbl");

        try {
            IoBuilder<LineDtar021Pojo>  iob = IoBuilderDtar021.newIoBuilder(copybookName);
            IWriter<LineDtar021Pojo> writer = iob.newWriter(outputFileName);
 
            writer.write(createDtar021(123));
            writer.write(createDtar021(1));
            writer.write(createDtar021(2));
            writer.write(createDtar021(321));

            writer.close();
       } catch (Exception e) {
            System.out.println();

            e.printStackTrace();
        }
    }


  /*
   *   The following code contains sample assignments for every 
   * field in the Cobol File. You should modify the code to suit
   * your needs.
   *   As I do not know where the data is coming from, I have used
   * SourceOfDataForTheCobolFile instead. You should replace this with your
   * class / classes  or remove it as needed.
   *   To put it another way, it time for you to start Coding
   */

    private LineDtar021Pojo createDtar021(int data)
    throws IOException {

        LineDtar021Pojo line = new LineDtar021Pojo();

        line.setKeycodeNo(Integer.toString(data));
        line.setStoreNo((short)data);
        line.setTheDate(data);
        line.setDeptNo((short)data);
        line.setQtySold(data);
        line.setSalePrice(BigDecimal.valueOf(data));


        return line;
    }

    
    private String getFilePath(String name) {
    	return this.getClass().getResource(name).getFile();
    }

    public static void main(String[] args) {
        new WriteDtar021pojo();
    }
}

