/*  -------------------------------------------------------------------------
 *
 *            Sub-Project: JRecord IOBuilder examples
 *    
 *    Sub-Project purpose: Examples of using JRecord IOBuilders
 *                        to perform IO on Cobol Data files
 *    
 *                 Author: Bruce Martin
 *    
 *                License: LGPL 2.1 or latter
 *                
 *    Copyright (c) 2016, Bruce Martin, All Rights Reserved.
 *   
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation; either
 *    version 2.1 of the License, or (at your option) any later version.
 *   
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU Lesser General Public License for more details.
 *
 * ------------------------------------------------------------------------ */
      
package net.sf.JRecord.zExamples.iob.cobol.iobuilder;


import net.sf.JRecord.cgen.def.IFieldName1Dimension;
import net.sf.JRecord.cgen.impl.array.ArrayFieldName;

/**
 * This class holds the Cobol fields names as constants.
 * So rather than having to remember the Cobol-Names use your
 * IDE's auto assist instead.
 *
 * There could be duplicate field names, I will leave you to sort this out
 *
 * Code Generated by the Recordeditor (Author: Bruce Martin)
 */

public class Amspodownload {

    public static final ClassPoRecord PORECORD = new ClassPoRecord();
    public static final ClassProductRecord PRODUCTRECORD = new ClassProductRecord();
    public static final ClassLocationRecord LOCATIONRECORD = new ClassLocationRecord();


    public static final class ClassPoRecord { 

        public final String recordName = "PO-Record";

        public final String recordType = "Record-Type";
        public final String sequenceNumber = "Sequence-Number";
        public final String vendor = "Vendor";
        public final String po = "PO";
        public final String entryDate = "Entry-Date";
        public final String beg01Code = "beg01-code";
        public final String beg02Code = "beg02-code";
        public final String department = "Department";
        public final String expectedRecieptDate = "Expected-Reciept-Date";
        public final String cancelByDate = "Cancel-by-date";
        public final String ediType = "EDI-Type";
        public final String addDate = "Add-Date";
        public final String departmentName = "Department-Name";
        public final String prcoessType = "Prcoess-Type";
        public final String orderType = "Order-Type";

    }


    public static final class ClassProductRecord { 

        public final String recordName = "Product-Record";

        public final String recordType = "Record-Type";
        public final String packQty = "Pack-Qty";
        public final String packCost = "Pack-Cost";
        public final String apn = "APN";
        public final String product = "Product";
        public final String pmgDtlTechKey = "pmg-dtl-tech-key";
        public final String casePackId = "Case-Pack-id";
        public final String productName = "Product-Name";

    }


    public static final class ClassLocationRecord { 

        public final String recordName = "Location-Record";

        public final String recordType = "Record-Type";

   // Array Fields follow

        public final IFieldName1Dimension dcNumber = new ArrayFieldName("DC-Number");
        public final IFieldName1Dimension packQuantity = new ArrayFieldName("Pack-Quantity");

    }

}
